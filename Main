#include<iostream>
using namespace std;

struct post{		//Gather player informations
	int position;
	char counter;
}postman;

int flag, x;

char A[3][3] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};

struct player{

	char counter;
	string name;
	int pos;
    
	int inputname(){		//Input player name
	
	cout<<"Enter your name : ";
	getline(cin >> ws, name);

	return 0;
	}
	
	int inputcounter(){		//Input player counter ( x or o)
	cout<<"Choose your counter(x or o) : ";
    loop1:cin>>counter;
    
	if(counter != 'x' && counter != 'o'){
		cout<<"Invalid Entry......Enter again : ";
		goto loop1;
	}

	return 0;
	}

    int playsend(){   		//Enter and get the counter position when playing the game 
    
		cout<<name<<"'s turn:"<<endl<<endl;
		cout<<"Enter position where you want to place your counter : ";
		loop2:cin>>pos;
		
		if(pos <= 0 || pos > 9)
		{
			cout<<"Invalid move,enter again : ";
			goto loop2;
		}
		
		postman.position = pos;
		postman.counter = counter;
    
	return 0;
	}
     
    string showdetails(){		//Reteurn the name of the player accordingly
		
		return name;
	}
		
	char access_counter(){		//Reteurn the counter(x or o) of the player accordingly
		
		return counter;
	}
};

struct Gameboard{

   	int B[3][3];
	char c;
		
		char board(){		//Display the gameboard where the game continues.

        cout<<'\t'<<'\t'<<"     |     |     "<<endl;
        cout<<'\t'<<'\t'<<"  "<<A[0][0]<<"  |  "<<A[0][1]<<"  |  "<<A[0][2]<<endl;
		cout<<'\t'<<'\t'<<"_____|_____|_____"<<endl;
		cout<<'\t'<<'\t'<<"     |     |     "<<endl;
		cout<<'\t'<<'\t'<<"  "<<A[1][0]<<"  |  "<<A[1][1]<<"  |  "<<A[1][2]<<endl;
		cout<<'\t'<<'\t'<<"_____|_____|_____"<<endl;
		cout<<'\t'<<'\t'<<"     |     |     "<<endl;
		cout<<'\t'<<'\t'<<"  "<<A[2][0]<<"  |  "<<A[2][1]<<"  |  "<<A[2][2]<<endl;
        cout<<'\t'<<'\t'<<"     |     |  "<<endl;

		return 0;
	}
		 
	int show(){		//Show message to the player/players to enter the counter

	system("cls");   
    cout<<"                                          "<<endl;
    cout<<"Enter the position you want your counter to be entered as shown..."<<endl<<endl;
	cout<<"7 8 9"<<endl<<"4 5 6"<<endl<<"1 2 3"<<endl<<endl<<endl;
	
	return 0;
	}

	int recieveassign(){		//Call the "work" function according to the position entered by the player

     	c = postman.counter;
         
    	switch(postman.position){

		case 1 : work(2, 0);
		          break;
		          
		case 2 : work(2, 1);
		          break;
		
		case 3 : work(2, 2);
		          break;
		
		case 4 : work(1, 0);
		          break;
		          
		case 5 : work(1, 1);
		          break;
		          
		case 6 : work(1, 2);
		          break;
		
		case 7 : work(0, 0);
		          break;
				  
		case 8 : work(0, 1);
				  break;
				  
		case 9 : work(0, 2);
				  break;
    	}

	return 0; 
	}

	int work(int m, int n){			//To call the "check" function and assign values for check win conditions and
									//assign values for check win conditions
			check(m, n);        	
			
			A[m][n] = c;
			B[m][n] = 1;
			
			return 0;
	} 
		
	int check(int &r, int &i){

		if(B[r][i] == 1){

			cout<<"Place is filled"<<endl<<"Enter again : ";
			cin>>postman.position;
			
			switch(postman.position){		//Check weather the entered position is filled
											//if so "place is filled" message will be shown and 
			case 1 : r = 2; i = 0;			//"check" function called recursively
					break;
					
			case 2 : r = 2; i = 1;
					break;
			
			case 3 : r = 2; i = 2;
					break;
			
			case 4 : r = 1; i = 0;
					break;
					
			case 5 : r = 1; i = 1;
					break;
					
			case 6 : r = 1; i = 2;
					break;
			
			case 7 : r = 0; i = 0;
					break;
					
			case 8 : r = 0; i = 1;
					break;
					
			case 9 : r = 0; i = 2;
					break;
			}
			
		check(r, i);
		}
	
	}
		
	int winnerdecider(){		//Check wheather player has completed the winning line

			if(A[0][0] == c && A[0][1] == c && A[0][2] == c)
			flag = 1;
			
			if(A[1][0] == c && A[1][1] == c && A[1][2] == c)
			flag = 1;
			
			if(A[2][0] == c && A[2][1] == c && A[2][2] == c)
			flag = 1;
			
			if(A[0][0] == c && A[1][0] == c && A[2][0] == c)
			flag = 1;
			
			if(A[0][1] == c && A[1][1] == c && A[2][1] == c)
			flag = 1;
			
			if(A[0][2] == c && A[1][2] == c && A[2][2] == c)
			flag = 1;
			
			if(A[0][0] == c && A[1][1] == c && A[2][2] == c)
			flag = 1;
			
			if(A[0][2] == c && A[1][1] == c && A[2][0] == c)
			flag = 1;	
	}	
};

struct virtualplayer{
		
	char counter;
	char a[2]= {'x', 'o'};
	int id;	
	char b[3][3];

	int code(int i,int j){		//Return the position of virtual player

			if(i == 0 && j == 0)
			return 7;
			
			if(i == 0 && j == 1)
			return 8;
			
			if(i == 0 && j == 2)
			return 9;
			
			if(i == 1 && j == 0)
			return 4;
			
			if(i == 1 && j == 1)
			return 5;
			
			if(i == 1 && j == 2)
			return 6;
			
			if(i == 2 && j == 0)
			return 1;
			
			if(i == 2 && j == 1)
			return 2;
			
			if(i == 2 && j == 2)
			return 3;
	}
		
	int evaluate(char b[3][3]){				//Check whether the winconditions are fullfiled

		if(b[0][0] == a[id] && b[0][0] == b[0][1] && b[0][0] == b[0][2])
		return 1;
				
		else if(b[1][0] == a[id] && b[1][0] == b[1][1] && b[1][0] == b[1][2])
		return 1;
				
		else if(b[2][0] == a[id] && b[2][0] == b[2][1] && b[2][0] == b[2][2])
		return 1;
			
		else if(b[0][0] == a[id] && b[0][0] == b[1][0] && b[0][0] == b[2][0])
		return 1;
				
		else if(b[0][1] == a[id] && b[0][1] == b[1][1] && b[0][1] == b[2][1])
		return 1;
				
		else if(b[0][2] == a[id] && b[0][2] == b[1][2] && b[0][2] == b[2][2])
		return 1;
				
		else if(b[0][0] == a[id] && b[0][0] == b[1][1] && b[0][0] == b[2][2])
		return 1;
			
		else if(b[2][0] == a[id] && b[2][0] == b[1][1] && b[2][0] == b[0][2])
		return 1;	

				
		else if(b[0][0] == a[(id+1)%2] && b[0][0] == b[0][1] && b[0][0] == b[0][2])
		return 2;
				
		else if(b[1][0] == a[(id+1)%2] && b[1][0] == b[1][1] && b[1][0] == b[1][2])
		return 2;
				
		else if(b[2][0] == a[(id+1)%2] && b[2][0] == b[2][1] && b[2][0] == b[2][2])
		return 2;
			
		else if(b[0][0] == a[(id+1)%2] && b[0][0] == b[1][0] && b[0][0] == b[2][0])
		return 2;
				
		else if(b[0][1] == a[(id+1)%2] && b[0][1] == b[1][1] && b[0][1] == b[2][1])
		return 2;
				
		else if(b[0][2] == a[(id+1)%2] && b[0][2] == b[2][2] && b[0][2] == b[2][2])
		return 2;
				
		else if(b[0][0] == a[(id+1)%2] && b[0][0] == b[1][1] && b[0][0] == b[2][2])
		return 2;
			
		else if(b[2][0] == a[(id+1)%2] && b[2][0] == b[1][1] && b[2][0] == b[0][2])
		return 2;			
	}
			
	int assignid(char a){		//Assign a index to the counter accordingly
			
			if(a == 'x'){
				counter = 'o';
				id = 1;
			}
				
			if (a == 'o'){
				counter = 'x';
				id = 0;
			}
				
			return id;
	}
			
	int decide(char board[3][3], int id){		//Decide the virtual player's counter

		int temp;
				
		for(int i = 0; i < 3; i++){
			for(int j = 0; j < 3; j++){

				if(board[i][j] == ' '){

					board[i][j] = a[id];

						if(evaluate(board) == 1){
							board[i][j] = ' ';

							return code(i, j);
						}

					board[i][j] = ' ';
				}
			}
		}
				
		for(int i = 0; i < 3; i++){
			for(int j = 0; j < 3; j++){

				if(board[i][j] == ' '){

					board[i][j] = a[(id+1)%2];

						if(evaluate(board) == 2){
							board[i][j] = ' ';
							return code(i, j);
						}

					board[i][j] = ' ';
				}
			}
		}
					
		for(int i = 0; i < 3; i++){
			for(int j = 0; j < 3; j++){

				if(board[i][j] == ' '){

					board[i][j] = a[id];
					temp = decide(board,(id+1)%2);
					board[i][j] = ' ';
							
				if(temp >= 1 && temp <= 9)

				return temp;
				}
			}
		}
	}

	char access_counter(){		//Return the virtual player's counter
		
		return counter;
	}

	int winnerdecidervirtual(int id){			//Check whether the player or computer win in single player mode

		if(A[0][0] == a[id] && A[0][1] == a[id] && A[0][2] == a[id])
		x = 2;
			
		if(A[1][0] == a[id] && A[1][1] == a[id] && A[1][2] == a[id])
		x = 2;
			
		if(A[2][0] == a[id] && A[2][1] == a[id] && A[2][2] == a[id])
		x = 2;
			
		if(A[0][0] == a[id] && A[1][0] == a[id] && A[2][0] == a[id])
		x = 2;
			
		if(A[0][1] == a[id] && A[1][1] == a[id] && A[2][1] == a[id])
		x = 2;
			
		if(A[0][2] == a[id] && A[1][2] == a[id] && A[2][2] == a[id])
		x = 2;
			
		if(A[0][0] == a[id] && A[1][1] == a[id] && A[2][2] == a[id])
		x = 2;
			
		if(A[0][2] == a[id] && A[1][1] == a[id] && A[2][0] == a[id])
		x = 2;

			
		if(A[0][0] == a[(id+1)%2] && A[0][1] == a[(id+1)%2] && A[0][2] == a[(id+1)%2])
		x = 1;
			
		if(A[1][0] == a[(id+1)%2] && A[1][1] == a[(id+1)%2] && A[1][2] == a[(id+1)%2])
		x = 1;
			
		if(A[2][0] == a [(id+1)%2] && A[2][1] == a[(id+1)%2] && A[2][2] == a[(id+1)%2])
		x = 1;
			
		if(A[0][0] == a[(id+1)%2] && A[1][0] == a[(id+1)%2] && A[2][0] == a[(id+1)%2])
		x = 1;
			
		if(A[0][1] == a[(id+1)%2] && A[1][1] == a[(id+1)%2] && A[2][1] == a[(id+1)%2])
		x = 1;
			
		if(A[0][2] == a[(id+1)%2] && A[1][2] == a[(id+1)%2] && A[2][2] == a[(id+1)%2])
		x = 1;
			
		if(A[0][0] == a[(id+1)%2] && A[1][1] == a[(id+1)%2] && A[2][2] == a[(id+1)%2])
		x = 1;
			
		if(A[0][2] == a[(id+1)%2] && A[1][1] == a[(id+1)%2] && A[2][0] == a[(id+1)%2])
		x = 1;
	}		
};

int main(){

	Gameboard g;

	string playerchoice;
	string cop;
	
	home:
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxx              xxxx            xxxx            xxxxxxxxxx              xxxxxxxxx        xxxxxxxxx            xxxxxxxxxx              xxxx              xxxx              xxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxx    xxxx    xxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxx    xxxx              xxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxx    xxxxxxxx    xxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx            xxxx            xxxxxxxxxxxxxxx    xxxxxxxx    xxxxxxxxxxxx    xxx            xxxxxxxxxxxxxxx    xxxxxxxxx              xxxx              xxxxxxxxxxxxxxxxxxxxxxx"<<endl;
	cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;

	cout<<endl;
	cout<<endl;
	cout<<'\t'<<'\t'<<'\t'<<'\t'<<'\t'<<"Menu :-"<<endl;
	cout<<'\t'<<'\t'<<'\t'<<'\t'<<'\t'<<"1. Single Player"<<endl;
	cout<<'\t'<<'\t'<<'\t'<<'\t'<<'\t'<<"2. MultiPlayer"<<endl;
	cout<<'\t'<<'\t'<<'\t'<<'\t'<<'\t'<<"3. Instructions"<<endl;
	cout<<'\t'<<'\t'<<'\t'<<'\t'<<'\t'<<"4. Exit"<<endl;

	cin>>playerchoice;

	if(playerchoice == "1"){		//single player mode
		system("cls");
		player p;
		virtualplayer v;
		p.inputname();
		p.inputcounter();
		
		int id = v.assignid(p.access_counter());
		
		for(int i = 0; i < 10; i++){
			system("cls");
			g.show();
			g.board();

			if(i%2 == 1){
				postman.counter = v.access_counter();
				postman.position = v.decide(A, id);
        	}
			
			else p.playsend();
			
			g.recieveassign();
			system("cls");
			g.show();
			g.board();

			if(id == 1){
				v.winnerdecidervirtual(1);
			}

			if(id == 0){
				v.winnerdecidervirtual(0);
			}
			
			if(x==1){
				cout<<endl;
				cout<<endl;
				cout<<"xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo"<<endl;
				cout<<endl;
				cout<<endl;
				cout<<'\t'<<"Congratulations "<<p.showdetails()<<" you win!!!!"<<endl;
				break;
			} 

			if(x==2){
				cout<<endl;
				cout<<endl;
				p.showdetails();
				cout<<"xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo"<<endl;
				cout<<endl;
				cout<<endl;
				cout<<'\t'<<"oops "<<p.showdetails()<<" you lost"<<endl;
				break;
			} 
			
			if(i==9){
				g.show();
				g.board();
				cout<<endl;
				cout<<endl;
				cout<<"xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo"<<endl;
				cout<<endl;
				cout<<endl;
				cout<<'\t'<<"Game Drawn..."<<endl;
				break;
			}
		}

		cout<<endl;
		cout<<endl;
		cout<<"Press any key to exit"<<endl;
		cin>>cop;

		system("cls");
		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxx              xxxx    xxxxxxxxxx    xxxxxxxxxx        xxxxxxxxxx        xxxxxx    xxxx    xxxx     xxxxxxxxxxxxxx    xxxxxxxxxx    xxxx              xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxxx    xx    xxxxxxxxx    x    xxxxx    xxxx    xxx    xxxxxxxxxxxxxxxxxx    xxxxxx    xxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxx    xxxx    xxxxxxxx    xx    xxxx    xxxx    xx    xxxxxxxxxxxxxxxxxxxxx    xx    xxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx                  xxxxxxx    xxxxxx    xxxxxxx    xxx    xxx    xxxx        xxxxxxxxxxxxxxxxxxxxxxxxx      xxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxx    xxxxxxxx    xxxxxx    xxxx    xx    xxxx    xxx   xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxx    xxxxxxxxxx    xxxxx    xxxxx    x    xxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxx    xxxxxxxxxxxx    xxxx    xxxxxx        xxxx    xxxxx     xxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx              xxxx                xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;

		return 0;
	}
	
	if(playerchoice == "2"){		//Multiplayer mode

		system("cls");

		player p[2];
		for(int i = 0; i < 2; i++){
			cout<<"For player"<<i+1<<endl;
		    p[i].inputname();
		}

		loop4:for(int i = 0; i < 2; i++){
			cout<<"For player"<<i+1<<endl;
		    p[i].inputcounter();
		}

		if(p[0].access_counter() == p[1].access_counter()){
			cout<<"Same counter cannot be choosen again !!!!!"<<endl;
			goto loop4;
		}
		
		int w;
		int n[9] = {0, 1, 0, 1, 0, 1, 0, 1, 0};
		
		for(int z = 0; z < 10; z++){

			system("cls");

			g.show();
			g.board();

			w = n[z];

			p[w].playsend();
			g.recieveassign();
			g.show();
			g.board();
			g.winnerdecider();
			
			if(flag == 1){

				system("cls");

				g.board();
				cout<<endl;
				cout<<endl;
				cout<<'\t'<<"Congratulations "<<p[w].showdetails()<<" you win!!!!"<<endl;
				break;
			}
			
			if(z == 8){
				cout<<endl;
				cout<<endl;
				cout<<"xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo"<<endl;
				cout<<endl;
				cout<<endl;
				cout<<'\t'<<"Game Drawn..."<<endl;
				break;
			}
		}

		cout<<endl;
		cout<<endl;
		cout<<"Press any key to exit"<<endl;
		cin>>cop;

		system("cls");
		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxx              xxxx    xxxxxxxxxx    xxxxxxxxxx        xxxxxxxxxx        xxxxxx    xxxx    xxxx     xxxxxxxxxxxxxx    xxxxxxxxxx    xxxx              xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxxx    xx    xxxxxxxxx    x    xxxxx    xxxx    xxx    xxxxxxxxxxxxxxxxxx    xxxxxx    xxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxx    xxxx    xxxxxxxx    xx    xxxx    xxxx    xx    xxxxxxxxxxxxxxxxxxxxx    xx    xxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx                  xxxxxxx    xxxxxx    xxxxxxx    xxx    xxx    xxxx        xxxxxxxxxxxxxxxxxxxxxxxxx      xxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxx    xxxxxxxx    xxxxxx    xxxx    xx    xxxx    xxx   xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxx    xxxxxxxxxx    xxxxx    xxxxx    x    xxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxx    xxxxxxxxxxxx    xxxx    xxxxxx        xxxx    xxxxx     xxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx              xxxx                xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;

		return 0;
    }

	if(playerchoice == "3"){		//instructions
		
		system("cls");
		
		cout<<"********Hey stranger!!!********"<<endl;
		cout<<"This is the tic tac toe game"<<endl;
		cout<<"1. Select one of player modes"<<endl;
		cout<<"2. Press number 1 to enter the single-player mode. You will play with the computer(A virtual player)."<<endl;
		cout<<"3. Press number 2 to enter the multiplayer mode. You will play with a friend."<<endl;
		cout<<"4. After selecting a player mode, enter the name and choose a counter (x or o)."<<endl;
		cout<<"5. If multiplayer mode, enter two names first and counters accordingly."<<endl;
		cout<<"6. Then the game will begin and game board will be shown with given positions."<<endl;
		cout<<"7. You can place your counters and enjoy the game."<<endl;
		cout<<endl;
		cout<<"Press any key to go back to main menu"<<endl;
		
		cin>>cop;
		
		system("cls");

		goto home;	
	}

	if(playerchoice == "4"){		//Exit from the game

		system("cls");

		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxx              xxxx    xxxxxxxxxx    xxxxxxxxxx        xxxxxxxxxx        xxxxxx    xxxx    xxxx     xxxxxxxxxxxxxx    xxxxxxxxxx    xxxx              xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxxx    xx    xxxxxxxxx    x    xxxxx    xxxx    xxx    xxxxxxxxxxxxxxxxxx    xxxxxx    xxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxxxx    xxxx    xxxxxxxx    xx    xxxx    xxxx    xx    xxxxxxxxxxxxxxxxxxxxx    xx    xxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx                  xxxxxxx    xxxxxx    xxxxxxx    xxx    xxx    xxxx        xxxxxxxxxxxxxxxxxxxxxxxxx      xxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxxx    xxxxxxxx    xxxxxx    xxxx    xx    xxxx    xxx   xxxxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxxx    xxxxxxxxxx    xxxxx    xxxxx    x    xxxx    xxxx    xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx    xxxxxx    xxxx    xxxxxxxx    xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxx    xxxxxxxxx    xxxxxxxxxx    xxxx    xxxxxxxxxxxx    xxxx    xxxxxx        xxxx    xxxxx     xxxxxxxxxxxxxxxxxxxx    xxxxxxxxxxx              xxxx                xxxxxxxxxxxxxxxxxxxxxxxx"<<endl;
		cout<<"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"<<endl;

		return 0;
	}

	else		//Back to the main menu if invalid number entered			
		system("cls");

		goto home;
	
	return 0;
}
